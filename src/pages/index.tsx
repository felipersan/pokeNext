import type { NextPage } from 'next'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'
import { useGetPokemon } from '../services/pokeApi/GET/useGetPokemon'

import * as S from '../styles/pages/styles'
import { getPokemon, pokemonGeneric } from '../interfaces/API/GET'
import CardPokemon from '../components/pages/CardPokemon'

const Home: NextPage = () => {
  const [offsetPokemon, setOffsetPokemon] = useState<number>(20)
  const [oldCallToApi, setOldCallToApi] = useState<any>(null)
  const [pokemons, setPokemons] = useState<any[]>([])

  const { pokemonsWithPagination } = useGetPokemon(offsetPokemon)

  useEffect(() => {
    if (pokemonsWithPagination) {
      addPokemonsToArray(pokemonsWithPagination)
      setTimeout(() => {
        setOldCallToApi(pokemonsWithPagination.data)
      }, 200)
    }
  }, [pokemonsWithPagination])

  function addPokemonsToArray(pokemonsList: getPokemon) {
    if (pokemons && pokemonsList && oldCallToApi !== pokemonsList.data) {
      setPokemons(oldArray => [...oldArray, ...pokemonsList.data.results])
    } else if (
      !!pokemons &&
      pokemonsList &&
      oldCallToApi !== pokemonsList.data
    ) {
      setPokemons(pokemonsList.data.results)
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <p>teste</p>
      <button
        onClick={() => {
          setOffsetPokemon(offsetPokemon + 20)
        }}
      >
        Carregar mais pokemons
      </button>
      <S.Container className="DisplayGridPokemon">
        {pokemons.map((row: any, key: number) => (
          <CardPokemon key={key} data={row as pokemonGeneric}></CardPokemon>
        ))}
      </S.Container>
    </div>
  )
}

export default Home
